<?php

namespace COM\PlatformBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends EntityRepository
{
	
	public function getCommentsLimit($type, $entity, $limit, $order) {
		
		$qb = $this->createQueryBuilder('comment');

		$qb
		->where('comment.'.$type.' =:'.$type)
        ->setParameter($type, $entity)
		->setMaxResults($limit)
		->orderBy('comment.id', 'DESC')
		;
		
        $commentsTemp = $qb->getQuery()->getResult();
		
		$comments = array();
		if($order == 'DESC'){
			foreach($commentsTemp as $comment){
				array_unshift($comments, $comment);
			}
		}else{
			$comments = $commentsTemp;
		}
		
		return $comments;
    }
	
	public function getCommentsSince($comment, $type, $entity, $limit, $order) {
		
		$qb = $this->createQueryBuilder('comment');

		$qb
		->where('comment.'.$type.' =:'.$type)
        ->setParameter($type, $entity);
		
		$qb->andWhere('comment.id <= :idComment');
		
		$qb
        ->setParameter('idComment', $comment->getId())
		->setMaxResults($limit)
		->orderBy('comment.id', 'DESC')
		;
		
        $commentsTemp = $qb->getQuery()->getResult();
		
		$comments = array();
		if($order == 'DESC'){
			foreach($commentsTemp as $comment){
				array_unshift($comments, $comment);
			}
		}else{
			$comments = $commentsTemp;
		}
		
		return $comments;
    }
	
	public function getSinceComment($comment, $type, $entity) {
		
		$qb = $this->createQueryBuilder('comment');

		$qb
		->where('comment.'.$type.' =:'.$type)
        ->setParameter($type, $entity);
		
		$qb->andWhere('comment.id < :idComment');
		
		$qb
        ->setParameter('idComment', $comment->getId())
		->setMaxResults(1)
		->orderBy('comment.id', 'DESC')
		;
		
        $comment = $qb->getQuery()->getOneOrNullResult();
		
		return $comment;
    }
}
